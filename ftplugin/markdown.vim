" Insert equation as gif file autogenerated by `latex.codecogs.com`.
" Author: HE Chong


if (exists('b:md_equation_insert_loaded'))
    finish
endif

let b:md_equation_insert_loaded = 1

py3 import vim

" Trim input_string before query
function! s:Input_Process(input_string)
    let l:str = substitute(a:input_string, '\s', '\\ ', 'g')
    return l:str 
endfunction

python3<<endOfPython
def md_ee_reverse_escape(input_string):
    output_prepare = input_string.replace(u'\ ', u' ')
    output_prepare = output_prepare.replace(u'\\\\', u'\\')
    return output_prepare

def md_ee_char_escape(input_string):
    output_prepare = input_string.replace(u'\\', u'\\\\')
    output_prepare = output_prepare.replace(u' ', u'\ ')
    return output_prepare

def md_edit_equation():
    import re

    web_api = 'http://latex.codecogs.com/gif.latex?'
    prefix = 'latex equation: '
    p = re.compile('!\\[' + prefix + '.*?\\]\\(' + web_api + '.*?\\)')

    cursor = vim.current.window.cursor
    line = vim.current.buffer[cursor[0] - 1]

    current = None
    all_start = -1
    url_start = -1
    for match in p.finditer(line):
        span = match.span()
        if cursor[1] >= span[0] and cursor[1] < span[1]:
            current = match
            all_start = match.span()[0]
            url_start = line.find(web_api, all_start)

    p_left = 1
    end = -1

    if all_start != -1:
        for char in list(zip(range(len(line)), line))[url_start:]:
            if char[1] == u'(':
                p_left += 1
            elif char[1] == u')':
                p_left -= 1
            if p_left == 0:
                end = char[0]
                break

    content = ""
    md_insert_new_equation = False
    if all_start == -1 or end == -1:
        md_insert_new_equation = True
    else:
        content = md_ee_reverse_escape(line[url_start:end].replace(web_api,''))

    new_equation = vim.eval("input('Type the equation(in latex format):\n', \"{}\")".format(content.replace('\\','\\\\')))

    if md_insert_new_equation:
        if not new_equation:
            return
        vim.command('normal! i![' + prefix + new_equation.replace('[', '{').replace(']', '}') + '](' + web_api + md_ee_char_escape(new_equation) + ')')
    else:
        if not new_equation:
            vim.command('echom "Detect empty equation input, quitting"')
            return
        line = line[:all_start] + '![' + prefix + new_equation.replace('[', '{').replace(']', '}') + '](' + web_api + md_ee_char_escape(new_equation) + line[end:]
        vim.current.buffer[cursor[0] - 1] = line
endOfPython


function! s:edit_equation()
    py3 md_edit_equation()
endfunction

command! EditEquation :call <SID>edit_equation()

nnoremap <unique><silent><buffer> <localleader>ee :call <SID>edit_equation()<CR>
